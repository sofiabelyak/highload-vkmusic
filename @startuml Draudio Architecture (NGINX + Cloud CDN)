@startuml Draudio Architecture (NGINX + VK Cloud)
!theme materia

left to right direction

legend bottom
  | Линии | Тип взаимодействия |
  | <color:green>Сплошная зеленая</color> | Синхронный запрос |
  | <color:blue>Пунктир синий</color> | Асинхронный запрос |
  | <color:red>Пунктир красный</color> | Асинхронное событие |
  | <color:purple>Фиолетовая</color> | Мониторинг |
end legend

cloud {
    component "VK Cloud" as vkcloud
}

together {
  rectangle "Clients" as clients {
    component "Web Client" as web 
    component "Mobile Apps" as mobile 
  }
  rectangle "Infrastructure" {
    component "NGINX" as nginx
    component "Kubernetes" as k8s 
  }
  component "API Gateway" as gateway 
  component "HAProxy\n(Load Balancer)" as haproxy
}

rectangle "Monitoring" {
  component "Prometheus" as prometheus 
  component "Grafana" as grafana 
  component "ELK Stack" as elk 
}

rectangle "Microservices" {
  component "Auth Service" as auth
  component "Search Service" as search
  component "Streaming Service" as streaming
  component "Playlist Service" as playlist
  component "Analytics Service" as analytics
  component "Recommendation Service" as reco
}

rectangle "Data" {
  rectangle "Databases" {
    database "PostgreSQL (Auth)" as pg_auth
    database "PostgreSQL (Playlists)" as pg_playlist
    database "ElasticSearch" as es
    database "Cassandra" as cassandra
    database "ClickHouse" as clickhouse
  }
  component "Redis Cluster" as redis 
  component "Kafka" as kafka 
}

' ===== Соединения =====
' Синхронные запросы (сплошные линии)
web -[#green]-> haproxy : HTTPS (sync)
mobile -[#green]-> haproxy : HTTPS (sync)
haproxy -[#green]-> nginx : All Requests (sync)
nginx -[#green]-> gateway : API Requests (sync)
gateway -[#green]-> auth : /auth (sync)
gateway -[#green]-> search : /search (sync)
gateway -[#green]-> playlist : /playlists (sync)
streaming -[#green]-> vkcloud : Streaming (sync)

' Синхронные запросы между сервисами
auth -[#green]-> search : (sync)
auth -[#green]-> recommendation : (sync)
auth -[#green]-> playlist : (sync)
auth -[#green]-> search : (sync)

' Асинхронные запросы (пунктирные линии)
streaming -[#blue,dashed]-> cassandra : Metadata (async)
playlist -[#blue,dashed]-> redis : Hot Data (async)
streaming -[#blue,dashed]-> redis : Buffers (async)

' Асинхронные события (пунктир + красный)
search -[#red,dashed]-> kafka : Events (async)
playlist -[#red,dashed]-> kafka : Events (async)
streaming -[#red,dashed]-> kafka : Metrics (async)
kafka -[#red,dashed]-> analytics : Processing (async)
kafka -[#red,dashed]-> elk : Processing (async)
analytics -[#red,dashed]-> reco : Insights (async)
reco -[#red,dashed]-> playlist : Suggestions (async)

' Мониторинг (специальный стиль)
prometheus -[#purple]-> grafana : Metrics (sync)
elk -[#purple]-> grafana : Logs (async)

' Чтение/Запись данных
auth -[#green]-> pg_auth : Write (sync)
search -[#green]-> es : Read (sync)
playlist -[#green]-> pg_playlist : Write (sync)
analytics -[#blue,dashed]-> clickhouse : Write (async)


@enduml 